# Generated by Django 5.0.7 on 2024-07-30 02:03

import datetime
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('comment_id', models.AutoField(primary_key=True, serialize=False)),
                ('comment_name', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Commodity',
            fields=[
                ('commodity_id', models.AutoField(primary_key=True, serialize=False)),
                ('commodity_name', models.TextField(unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='InterestIssue',
            fields=[
                ('interest_issue_id', models.AutoField(primary_key=True, serialize=False)),
                ('issue_name', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Market',
            fields=[
                ('market_id', models.AutoField(primary_key=True, serialize=False)),
                ('market_name', models.TextField(unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('tag_id', models.AutoField(primary_key=True, serialize=False)),
                ('tag_name', models.TextField(unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='UnhappyCustomer',
            fields=[
                ('unhappy_customer_id', models.AutoField(primary_key=True, serialize=False)),
                ('unhappy_customer_bool', models.BooleanField(default=False)),
                ('unhappy_customer_reason', models.TextField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Buyer',
            fields=[
                ('buyer_code', models.TextField(primary_key=True, serialize=False)),
                ('shop_name', models.TextField(max_length=256, unique=True)),
                ('shop_number', models.TextField(unique=True)),
                ('owner_name', models.TextField(max_length=256)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('market_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tag_feedback_input.market')),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('post_id', models.AutoField(primary_key=True, serialize=False)),
                ('packaging_requirement_weight', models.FloatField(choices=[(50, 50), (40, 40), (30, 30), (1, 1), (0.5, 0.5), (0.1, 0.1)], default=30)),
                ('customer_type', models.TextField(choices=[('Wholesaler/Trader', 'Wholesaler/trader'), ('Retail', 'Retail'), ('Restaurant', 'Restaurant'), ('Hotel', 'Hotel'), ('Caterer', 'Caterer'), ('Exporter', 'Exporter'), ('Manufacturer', 'Manufacturer'), ('Broker', 'Broker'), ('Stockist', 'Stockist'), ('FPO', 'Fpo')], default='Wholesaler/Trader')),
                ('next_action', models.TextField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('buyer_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tag_feedback_input.buyer')),
                ('comment_id', models.ManyToManyField(to='tag_feedback_input.comment')),
            ],
        ),
        migrations.CreateModel(
            name='FollowUp',
            fields=[
                ('follow_up_id', models.AutoField(primary_key=True, serialize=False)),
                ('follow_up_date', models.DateField(blank=True, default=datetime.date(2024, 8, 2))),
                ('follow_up_time', models.TimeField(blank=True)),
                ('post_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tag_feedback_input.post')),
            ],
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('feedback_id', models.AutoField(primary_key=True, serialize=False)),
                ('feedback_content', models.TextField(db_index=True)),
                ('feedback_type', models.TextField(choices=[('visit', 'Visit'), ('call', 'Call')])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('buyer_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tag_feedback_input.buyer')),
                ('post_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tag_feedback_input.post')),
            ],
        ),
        migrations.CreateModel(
            name='BuyerSampleQuality',
            fields=[
                ('target_id', models.AutoField(primary_key=True, serialize=False)),
                ('sample_name', models.TextField(blank=True)),
                ('post_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tag_feedback_input.post')),
            ],
        ),
        migrations.CreateModel(
            name='BuyerInterest',
            fields=[
                ('buyer_interest_id', models.AutoField(primary_key=True, serialize=False)),
                ('buyer_issue', models.TextField()),
                ('interest_issue_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tag_feedback_input.interestissue')),
                ('post_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tag_feedback_input.post')),
            ],
        ),
        migrations.CreateModel(
            name='BuyerBagRequirement',
            fields=[
                ('bag_id', models.AutoField(primary_key=True, serialize=False)),
                ('min_bag_number', models.IntegerField(null=True)),
                ('max_bag_number', models.IntegerField(null=True)),
                ('avg_kg', models.FloatField(null=True)),
                ('post_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tag_feedback_input.post')),
            ],
        ),
        migrations.CreateModel(
            name='Quality',
            fields=[
                ('quality_id', models.AutoField(primary_key=True, serialize=False)),
                ('quality_code', models.TextField(unique=True)),
                ('quality_name', models.TextField()),
                ('internal_quality', models.TextField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High')])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('commodity_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tag_feedback_input.commodity')),
            ],
        ),
        migrations.AddField(
            model_name='post',
            name='quality_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tag_feedback_input.quality'),
        ),
        migrations.CreateModel(
            name='Stock',
            fields=[
                ('stock_id', models.AutoField(primary_key=True, serialize=False)),
                ('min_bag_number', models.IntegerField(null=True)),
                ('max_bag_number', models.IntegerField(null=True)),
                ('avg_kg', models.FloatField(null=True)),
                ('post_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tag_feedback_input.post')),
            ],
        ),
        migrations.AddField(
            model_name='post',
            name='tag_id',
            field=models.ManyToManyField(to='tag_feedback_input.tag'),
        ),
        migrations.CreateModel(
            name='TargetPrice',
            fields=[
                ('target_id', models.AutoField(primary_key=True, serialize=False)),
                ('min_target_price', models.FloatField(blank=True, null=True)),
                ('max_target_price', models.FloatField(blank=True, null=True)),
                ('avg_target_price', models.FloatField(blank=True, null=True)),
                ('include_gst', models.BooleanField(default=False)),
                ('post_id', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='tag_feedback_input.post')),
            ],
        ),
    ]
